(()=>{var o=null,n=new Chess,e=new Bot(n,2);function a(){$("#myBoard .square-55d63").css("background","")}function s(o){var n=$("#myBoard .square-"+o),e="#a9a9a9";n.hasClass("black-3c85d")&&(e="#696969"),n.css("background",e)}var t={draggable:!0,position:"start",onMouseoutSquare:function(o,n){a()},onMouseoverSquare:function(o,e){var a=n.moves({square:o,verbose:!0});if(0!==a.length){s(o);for(var t=0;t<a.length;t++)s(a[t].to)}},onDragStart:function(o,e,a,s){return!n.game_over()&&-1===e.search(/^b/)&&void 0},onDrop:async function(s,t){if(a(),null===n.move({from:s,to:t,promotion:"q"}))return"snapback";await async function(){const a="https://explorer.lichess.ovh/lichess?variant=standard&speeds=blitz,rapid,classical&fen=".concat(n.fen());fetch(a,{}).then((o=>o.json())).then((o=>{if(0!=o.moves.length)n.move(o.moves[0].san);else{let o=new Chess(n.fen()),a=e.getMove(o);console.log(a),n.move(a.move)}})).then(o.position(n.fen())).then(console.log(e.evaluateBoard(n)))}()},onSnapEnd:function(){o.position(n.fen())}};o=Chessboard("myBoard",t)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJNQUlBLElBQUlBLEVBQVEsS0FDUkMsRUFBTyxJQUFJQyxNQUlYQyxFQUFNLElBQUlDLElBQUlILEVBQU0sR0FFeEIsU0FBU0ksSUFDUEMsRUFBRSwwQkFBMEJDLElBQUksYUFBYyxJQUdoRCxTQUFTQyxFQUFZQyxHQUNuQixJQUFJQyxFQUFVSixFQUFFLG9CQUFzQkcsR0FFbENFLEVBWmdCLFVBYWhCRCxFQUFRRSxTQUFTLGlCQUNuQkQsRUFia0IsV0FnQnBCRCxFQUFRSCxJQUFJLGFBQWNJLEdBb0U1QixJQUFJRSxFQUFTLENBQ1hDLFdBQVcsRUFDWEMsU0FBVSxRQUNWQyxpQkFQRixTQUEyQlAsRUFBUVEsR0FDakNaLEtBT0FhLGtCQTNCRixTQUE0QlQsRUFBUVEsR0FFbEMsSUFBSUUsRUFBUWxCLEVBQUtrQixNQUFNLENBQ3JCVixPQUFRQSxFQUNSVyxTQUFTLElBSVgsR0FBcUIsSUFBakJELEVBQU1FLE9BQVYsQ0FHQWIsRUFBV0MsR0FHWCxJQUFLLElBQUlhLEVBQUksRUFBR0EsRUFBSUgsRUFBTUUsT0FBUUMsSUFDaENkLEVBQVdXLEVBQU1HLEdBQUdDLE1BYXRCQyxZQXRFRixTQUFzQkMsRUFBUVIsRUFBT0YsRUFBVVcsR0FFN0MsT0FBSXpCLEVBQUswQixjQUdtQixJQUF4QlYsRUFBTVcsT0FBTyxZQUFqQixHQWtFQUMsT0FyREZDLGVBQXVCTCxFQUFRTSxHQVc3QixHQVZBMUIsSUFVYSxPQVBGSixFQUFLK0IsS0FBSyxDQUNuQkMsS0FBTVIsRUFDTkYsR0FBSVEsRUFDSkcsVUFBVyxNQUlNLE1BQU8saUJBZ0Q1QkosaUJBQ0UsTUFBTUssRUFBTSwwRkFBMEZDLE9BQU9uQyxFQUFLb0MsT0FJbEhDLE1BQU1ILEVBRlUsSUFHYkksTUFBTUMsR0FBT0EsRUFBSUMsU0FDakJGLE1BQU1HLElBQ0wsR0FBNEIsR0FBeEJBLEVBQVksTUFBRXJCLE9BQ2hCcEIsRUFBSytCLEtBQUtVLEVBQVksTUFBRSxHQUFRLFNBQzNCLENBQ0wsSUFBSUMsRUFBWSxJQUFJekMsTUFBTUQsRUFBS29DLE9BQzNCTCxFQUFPN0IsRUFBSXlDLFFBQVFELEdBQ3ZCRSxRQUFRQyxJQUFJZCxHQUNaL0IsRUFBSytCLEtBQUtBLEVBQUtBLFVBRWhCTyxLQUFLdkMsRUFBTWUsU0FBU2QsRUFBS29DLFFBQVFFLEtBQUtNLFFBQVFDLElBQUkzQyxFQUFJNEMsY0FBYzlDLEtBN0RuRStDLElBd0NOQyxVQWxDRixXQUNFakQsRUFBTWUsU0FBU2QsRUFBS29DLFNBb0N0QnJDLEVBQVFrRCxXQUFXLFVBQVdyQyxJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ2hlc3NUZXN0aW5nLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIE5PVEU6IHRoaXMgZXhhbXBsZSB1c2VzIHRoZSBjaGVzcy5qcyBsaWJyYXJ5OlxyXG4vLyBodHRwczovL2dpdGh1Yi5jb20vamhseXdhL2NoZXNzLmpzXHJcblxyXG5cclxudmFyIGJvYXJkID0gbnVsbFxyXG52YXIgZ2FtZSA9IG5ldyBDaGVzcygpXHJcbnZhciB3aGl0ZVNxdWFyZUdyZXkgPSAnI2E5YTlhOSdcclxudmFyIGJsYWNrU3F1YXJlR3JleSA9ICcjNjk2OTY5J1xyXG5jb25zdCBtb3Zlc0Zyb21Cb29rID0gMztcclxudmFyIGJvdCA9IG5ldyBCb3QoZ2FtZSwgMik7XHJcblxyXG5mdW5jdGlvbiByZW1vdmVHcmV5U3F1YXJlcyAoKSB7XHJcbiAgJCgnI215Qm9hcmQgLnNxdWFyZS01NWQ2MycpLmNzcygnYmFja2dyb3VuZCcsICcnKVxyXG59XHJcblxyXG5mdW5jdGlvbiBncmV5U3F1YXJlIChzcXVhcmUpIHtcclxuICB2YXIgJHNxdWFyZSA9ICQoJyNteUJvYXJkIC5zcXVhcmUtJyArIHNxdWFyZSlcclxuXHJcbiAgdmFyIGJhY2tncm91bmQgPSB3aGl0ZVNxdWFyZUdyZXlcclxuICBpZiAoJHNxdWFyZS5oYXNDbGFzcygnYmxhY2stM2M4NWQnKSkge1xyXG4gICAgYmFja2dyb3VuZCA9IGJsYWNrU3F1YXJlR3JleVxyXG4gIH1cclxuXHJcbiAgJHNxdWFyZS5jc3MoJ2JhY2tncm91bmQnLCBiYWNrZ3JvdW5kKVxyXG59XHJcblxyXG5mdW5jdGlvbiBvbkRyYWdTdGFydCAoc291cmNlLCBwaWVjZSwgcG9zaXRpb24sIG9yaWVudGF0aW9uKSB7XHJcbiAgLy8gZG8gbm90IHBpY2sgdXAgcGllY2VzIGlmIHRoZSBnYW1lIGlzIG92ZXJcclxuICBpZiAoZ2FtZS5nYW1lX292ZXIoKSkgcmV0dXJuIGZhbHNlXHJcblxyXG4gIC8vIG9ubHkgcGljayB1cCBwaWVjZXMgZm9yIFdoaXRlXHJcbiAgaWYgKHBpZWNlLnNlYXJjaCgvXmIvKSAhPT0gLTEpIHJldHVybiBmYWxzZVxyXG59XHJcblxyXG5mdW5jdGlvbiBtYWtlUmFuZG9tTW92ZSAoKSB7XHJcbiAgdmFyIHBvc3NpYmxlTW92ZXMgPSBib3QuZ2VuZXJhdGVNb3ZlcygpXHJcblxyXG4gIC8vIGdhbWUgb3ZlclxyXG4gIGlmIChwb3NzaWJsZU1vdmVzLmxlbmd0aCA9PT0gMCkgcmV0dXJuXHJcblxyXG4gIHZhciByYW5kb21JZHggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBwb3NzaWJsZU1vdmVzLmxlbmd0aClcclxuICBnYW1lLm1vdmUocG9zc2libGVNb3Zlc1tyYW5kb21JZHhdKVxyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBvbkRyb3AgKHNvdXJjZSwgdGFyZ2V0KSB7XHJcbiAgcmVtb3ZlR3JleVNxdWFyZXMoKVxyXG5cclxuICAvLyBzZWUgaWYgdGhlIG1vdmUgaXMgbGVnYWxcclxuICB2YXIgbW92ZSA9IGdhbWUubW92ZSh7XHJcbiAgICBmcm9tOiBzb3VyY2UsXHJcbiAgICB0bzogdGFyZ2V0LFxyXG4gICAgcHJvbW90aW9uOiAncScgLy8gTk9URTogYWx3YXlzIHByb21vdGUgdG8gYSBxdWVlbiBmb3IgZXhhbXBsZSBzaW1wbGljaXR5XHJcbiAgfSlcclxuXHJcbiAgLy8gaWxsZWdhbCBtb3ZlXHJcbiAgaWYgKG1vdmUgPT09IG51bGwpIHJldHVybiAnc25hcGJhY2snXHJcblxyXG4gIC8vIG1ha2UgcmFuZG9tIGxlZ2FsIG1vdmUgZm9yIGJsYWNrXHJcbiAgYXdhaXQgZmV0Y2hPcGVuaW5nTW92ZSgpXHJcbiAgLy93aW5kb3cuc2V0VGltZW91dChtYWtlUmFuZG9tTW92ZSwgMjUwKVxyXG59XHJcblxyXG4vLyB1cGRhdGUgdGhlIGJvYXJkIHBvc2l0aW9uIGFmdGVyIHRoZSBwaWVjZSBzbmFwXHJcbi8vIGZvciBjYXN0bGluZywgZW4gcGFzc2FudCwgcGF3biBwcm9tb3Rpb25cclxuZnVuY3Rpb24gb25TbmFwRW5kICgpIHtcclxuICBib2FyZC5wb3NpdGlvbihnYW1lLmZlbigpKVxyXG59XHJcblxyXG5mdW5jdGlvbiBvbk1vdXNlb3ZlclNxdWFyZSAoc3F1YXJlLCBwaWVjZSkge1xyXG4gIC8vIGdldCBsaXN0IG9mIHBvc3NpYmxlIG1vdmVzIGZvciB0aGlzIHNxdWFyZVxyXG4gIHZhciBtb3ZlcyA9IGdhbWUubW92ZXMoe1xyXG4gICAgc3F1YXJlOiBzcXVhcmUsXHJcbiAgICB2ZXJib3NlOiB0cnVlXHJcbiAgfSlcclxuXHJcbiAgLy8gZXhpdCBpZiB0aGVyZSBhcmUgbm8gbW92ZXMgYXZhaWxhYmxlIGZvciB0aGlzIHNxdWFyZVxyXG4gIGlmIChtb3Zlcy5sZW5ndGggPT09IDApIHJldHVyblxyXG5cclxuICAvLyBoaWdobGlnaHQgdGhlIHNxdWFyZSB0aGV5IG1vdXNlZCBvdmVyXHJcbiAgZ3JleVNxdWFyZShzcXVhcmUpXHJcblxyXG4gIC8vIGhpZ2hsaWdodCB0aGUgcG9zc2libGUgc3F1YXJlcyBmb3IgdGhpcyBwaWVjZVxyXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbW92ZXMubGVuZ3RoOyBpKyspIHtcclxuICAgIGdyZXlTcXVhcmUobW92ZXNbaV0udG8pXHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBvbk1vdXNlb3V0U3F1YXJlIChzcXVhcmUsIHBpZWNlKSB7XHJcbiAgcmVtb3ZlR3JleVNxdWFyZXMoKVxyXG59XHJcblxyXG52YXIgY29uZmlnID0ge1xyXG4gIGRyYWdnYWJsZTogdHJ1ZSxcclxuICBwb3NpdGlvbjogJ3N0YXJ0JyxcclxuICBvbk1vdXNlb3V0U3F1YXJlOiBvbk1vdXNlb3V0U3F1YXJlLFxyXG4gIG9uTW91c2VvdmVyU3F1YXJlOiBvbk1vdXNlb3ZlclNxdWFyZSxcclxuICBvbkRyYWdTdGFydDogb25EcmFnU3RhcnQsXHJcbiAgb25Ecm9wOiBvbkRyb3AsXHJcbiAgb25TbmFwRW5kOiBvblNuYXBFbmRcclxufVxyXG5cclxuYm9hcmQgPSBDaGVzc2JvYXJkKCdteUJvYXJkJywgY29uZmlnKVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gZmV0Y2hPcGVuaW5nTW92ZSgpIHtcclxuICBjb25zdCB1cmwgPSBcImh0dHBzOi8vZXhwbG9yZXIubGljaGVzcy5vdmgvbGljaGVzcz92YXJpYW50PXN0YW5kYXJkJnNwZWVkcz1ibGl0eixyYXBpZCxjbGFzc2ljYWwmZmVuPVwiLmNvbmNhdChnYW1lLmZlbigpKTtcclxuXHJcbiAgY29uc3Qgb3B0aW9ucyA9IHt9O1xyXG5cclxuICBmZXRjaCh1cmwsIG9wdGlvbnMpXHJcbiAgICAudGhlbiggcmVzID0+IHJlcy5qc29uKCkgKVxyXG4gICAgLnRoZW4oIGRhdGEgPT4ge1xyXG4gICAgICBpZiAoZGF0YVsnbW92ZXMnXS5sZW5ndGggIT0gMCkge1xyXG4gICAgICAgIGdhbWUubW92ZShkYXRhWydtb3ZlcyddWzBdWydzYW4nXSlcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBsZXQgZ2FtZUNsb25lID0gbmV3IENoZXNzKGdhbWUuZmVuKCkpXHJcbiAgICAgICAgbGV0IG1vdmUgPSBib3QuZ2V0TW92ZShnYW1lQ2xvbmUpXHJcbiAgICAgICAgY29uc29sZS5sb2cobW92ZSlcclxuICAgICAgICBnYW1lLm1vdmUobW92ZS5tb3ZlKVxyXG4gICAgICB9XHJcbiAgICB9KS50aGVuKGJvYXJkLnBvc2l0aW9uKGdhbWUuZmVuKCkpKS50aGVuKGNvbnNvbGUubG9nKGJvdC5ldmFsdWF0ZUJvYXJkKGdhbWUpKSk7XHJcblxyXG4gIH0iXSwibmFtZXMiOlsiYm9hcmQiLCJnYW1lIiwiQ2hlc3MiLCJib3QiLCJCb3QiLCJyZW1vdmVHcmV5U3F1YXJlcyIsIiQiLCJjc3MiLCJncmV5U3F1YXJlIiwic3F1YXJlIiwiJHNxdWFyZSIsImJhY2tncm91bmQiLCJoYXNDbGFzcyIsImNvbmZpZyIsImRyYWdnYWJsZSIsInBvc2l0aW9uIiwib25Nb3VzZW91dFNxdWFyZSIsInBpZWNlIiwib25Nb3VzZW92ZXJTcXVhcmUiLCJtb3ZlcyIsInZlcmJvc2UiLCJsZW5ndGgiLCJpIiwidG8iLCJvbkRyYWdTdGFydCIsInNvdXJjZSIsIm9yaWVudGF0aW9uIiwiZ2FtZV9vdmVyIiwic2VhcmNoIiwib25Ecm9wIiwiYXN5bmMiLCJ0YXJnZXQiLCJtb3ZlIiwiZnJvbSIsInByb21vdGlvbiIsInVybCIsImNvbmNhdCIsImZlbiIsImZldGNoIiwidGhlbiIsInJlcyIsImpzb24iLCJkYXRhIiwiZ2FtZUNsb25lIiwiZ2V0TW92ZSIsImNvbnNvbGUiLCJsb2ciLCJldmFsdWF0ZUJvYXJkIiwiZmV0Y2hPcGVuaW5nTW92ZSIsIm9uU25hcEVuZCIsIkNoZXNzYm9hcmQiXSwic291cmNlUm9vdCI6IiJ9